[alias]
append = town append
hack = town hack
kill = town kill
new-pull-request = town new-pull-request
prepend = town prepend
prune-branches = town prune-branches
rename-branch = town rename-branch
repo = town repo
ship = town ship
sync = town sync

[apply]

# Detect whitespace errors when applying a patch.
whitespace = fix

[branch]

# Show most recently changed branches first.
sort = -committerdate

[core]

# Use custom `.gitignore`.
excludesfile = ~/.gitignore

# Treat spaces before tabs and all kinds of trailing whitespace as an error.
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space

# Make `git rebase` safer on macOS.
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false

# Speed up commands involving untracked files such as `git status`.
# https://git-scm.com/docs/git-update-index#_untracked_cache
untrackedCache = true
autocrlf = input

[color]

# Use colors in Git commands that are capable of colored output when
# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
ui = auto

[color "branch"]

current = yellow reverse
local = yellow
remote = green

[color "diff"]

meta = yellow bold
frag = magenta bold # line info
old = red           # deletions
new = green         # additions

[color "status"]

added = yellow
changed = green
untracked = cyan

[commit]
# https://help.github.com/articles/signing-commits-using-gpg/
# gpgsign = true

[gpg]

program = gpg

[diff]

# Detect copies as well as renames.
renames = copies

[diff "bin"]

# Use `hexdump` to diff binary files.
textconv = hexdump -v -C

[help]

# Automatically correct and execute mistyped commands.
autocorrect = 1

[merge]

# Include summaries of merged commits in newly created merge commit messages
log = true

[push]

# https://git-scm.com/docs/git-config#git-config-pushdefault
default = simple
# Make `git push` push relevant annotated tags when pushing branches out.
followTags = true

[init]

defaultBranch = main

[user]

name = Kallan Gerard
email = 36556982+kallangerard@users.noreply.github.com

[credential "https://dev.azure.com"]
useHttpPath = true

[filter "lfs"]
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
required = true
clean = git-lfs clean -- %f

[credential "https://github.com"]
helper = !/opt/homebrew/bin/gh auth git-credential

[credential "https://gist.github.com"]
helper = !/opt/homebrew/bin/gh auth git-credential

[pull]
	rebase = true
	ff = only
